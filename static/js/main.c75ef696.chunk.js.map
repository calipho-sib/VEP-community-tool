{"version":3,"sources":["utils/featureList.ts","utils/helpers/getFeatures.ts","utils/helpers/exportFile.ts","utils/constants.ts","assets/icons/loader.svg","components/CSVUpload.tsx","assets/icons/down_arrow_icon.svg","assets/icons/up_arrow_icon.svg","assets/icons/sort_icon.svg","assets/icons/info_icon.svg","assets/icons/error_icon.svg","assets/icons/github_corner.svg","utils/helpers/logger.ts","utils/service.ts","components/Loader.tsx","utils/helpers/parseData.ts","components/Table.tsx","components/Isoform.tsx","components/FeatureViewer.tsx","components/Instructions.tsx","components/Header.tsx","components/Footer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["featureList","APIRef","metadata","name","className","color","type","filter","addFeatures","featuresForViewer","isoName","map","currentFeature","Object","keys","length","prototype","hasOwnProperty","call","push","getExportFileBlob","props","columns","data","fileType","headerNames","col","exportValue","csvString","Papa","unparse","fields","Blob","_circle","_circle2","_circle3","ERROR","INSTRUCTIONS","papaparseOptions","header","dynamicTyping","skipEmptyLines","transformHeader","replace","CSVUpload","callGetPredictions","useState","fileName","setFileName","cssClass","onFileLoaded","fileInfo","parserOptions","cssInputClass","log","process","REACT_APP_DEVELOPMENT","console","baseURL","getPredictions","a","axios","post","then","res","catch","err","entry","get","_excluded","_extends","assign","target","i","arguments","source","key","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgLoader","_ref","svgRef","title","titleId","id","xmlns","xmlnsXlink","x","y","viewBox","enableBackground","xmlSpace","ref","fill","stroke","cx","cy","r","attributeName","dur","values","repeatCount","begin","ForwardRef","Loader","parseData","variantData","parsedData","errors","sift","polyphen","RESULT_COLUMN_DATA","Header","accessor","Table","predictionLoading","setPredictionLoading","setData","error","setError","fv","getBackgroundColor","index","cellId","POLYPHEN_PREDICTION","SIFT_PREDICTION","idx","Number","value","polyphenPrediction","siftPrediction","csvData","isoform","variants","Array","isArray","useMemo","useTable","getExportFileName","initialState","pageIndex","pageSize","useGlobalFilter","useSortBy","useExportData","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","exportData","src","Icon","alt","style","marginLeft","onClick","headerGroup","getHeaderGroupProps","uuidv4","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","getRowProps","cells","cell","backgroundColor","getCellProps","disabled","defaultValue","onChange","e","LabelComponent","offset","Isoform","handleIsoformChange","options","setOptions","selectedOption","setSelectedOption","useEffect","optionMap","iso","option","label","isOptionDisabled","FeatureViewerComponent","setIsoform","sequence","setSequence","setIsoName","features","setFeatures","loading","setLoading","setFv","nx","Nextprot","Client","buildFeatures","sequences","forEach","seq","uniqueName","featureViewer","createFeature","showAxis","showSequence","brushActive","toolbar","bubbleHelp","zoomMax","variant","feat","addFeature","onVariantChanged","d","detail","onGetPredictions","paramEntry","URLSearchParams","window","location","search","getIsoformList","Promise","all","nxEntry","getProteinSequence","getAntibody","getIsoformMapping","getAnnotationsWithProperty","getAnnotationsByCategory","getFeaturesByView","rawData","featsForViewer","metaData","featForViewer","NXUtils","convertMappingsToIsoformMap","NXViewerUtils","convertNXAnnotations","getFeaturesByIsoform","_","getMetadataByView","isoformAccession","document","getElementById","innerHTML","Instructions","entries","Footer","href","rel","App","FeatureViewer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.c75ef696.chunk.js","sourcesContent":["import { FeatureListType } from \"./types\";\n\nexport const featureList: FeatureListType[] = [\n  {\n    APIRef: \"sequence\",\n    metadata: { name: \"Sequence\" },\n  },\n  {\n    APIRef: \"beta-strand\",\n    metadata: {\n      name: \"Beta strand\",\n      className: \"betastrand\",\n      color: \"#B3F0C2\",\n      type: \"rect\",\n      filter: \"Secondary structure\",\n    },\n  },\n  {\n    APIRef: \"helix\",\n    metadata: {\n      name: \"Helix\",\n      className: \"helix\",\n      color: \"#B3F0D1\",\n      type: \"rect\",\n      filter: \"Secondary structure\",\n    },\n  },\n  {\n    APIRef: \"turn\",\n    metadata: {\n      name: \"Turn\",\n      className: \"turn\",\n      color: \"#B3F0E1\",\n      type: \"rect\",\n      filter: \"Secondary structure\",\n    },\n  },\n  {\n    APIRef: \"signal-peptide\",\n    metadata: {\n      name: \"Signal peptide\",\n      className: \"sign\",\n      color: \"#B3B3E1\",\n      type: \"rect\",\n      filter: \"Processing\",\n    },\n  },\n  {\n    APIRef: \"propeptide\",\n    metadata: {\n      name: \"Propeptide\",\n      className: \"pro\",\n      color: \"#B3B3B3\",\n      type: \"rect\",\n      filter: \"Processing\",\n    },\n  },\n  {\n    APIRef: \"mature-protein\",\n    metadata: {\n      name: \"Mature protein\",\n      className: \"mat\",\n      color: \"#B3B3C2\",\n      type: \"rect\",\n      filter: \"Processing\",\n    },\n  },\n  {\n    APIRef: \"initiator-methionine\",\n    metadata: {\n      name: \"Initiator Met\",\n      className: \"initMeth\",\n      color: \"#B3B3D1\",\n      type: \"unique\",\n      filter: \"Processing\",\n    },\n  },\n  {\n    APIRef: \"peroxisome-transit-peptide\",\n    metadata: {\n      name: \"Transit peptide\",\n      className: \"pero\",\n      color: \"#B3B3F0\",\n      type: \"rect\",\n      filter: \"Processing\",\n    },\n  },\n  {\n    APIRef: \"mitochondrial-transit-peptide\",\n    metadata: {\n      name: \"Transit peptide\",\n      className: \"mito\",\n      color: \"#B3B3F0\",\n      type: \"rect\",\n      filter: \"Processing\",\n    },\n  },\n  {\n    APIRef: \"domain\",\n    metadata: {\n      name: \"Domain\",\n      className: \"domain\",\n      color: \"#B3C2C2\",\n      type: \"rect\",\n      filter: \"Region\",\n    },\n  },\n  {\n    APIRef: \"miscellaneous-region\",\n    metadata: {\n      name: \"Region\",\n      className: \"miscregion\",\n      color: \"#B3C2B3\",\n      type: \"rect\",\n      filter: \"Region\",\n    },\n  },\n  {\n    APIRef: \"repeat\",\n    metadata: {\n      name: \"Repeat\",\n      className: \"repeat\",\n      color: \"#98B7D5\",\n      type: \"rect\",\n      filter: \"Region\",\n    },\n  },\n  {\n    APIRef: \"calcium-binding-region\",\n    metadata: {\n      name: \"Calcium binding\",\n      className: \"calcium\",\n      color: \"#B3C2E1\",\n      type: \"rect\",\n      filter: \"Region\",\n    },\n  },\n  {\n    APIRef: \"zinc-finger-region\",\n    metadata: {\n      name: \"Zinc finger\",\n      className: \"calcium\",\n      color: \"#B3C2E1\",\n      type: \"rect\",\n      filter: \"Region\",\n    },\n  },\n  {\n    APIRef: \"dna-binding-region\",\n    metadata: {\n      name: \"DNA binding\",\n      className: \"dnabind\",\n      color: \"#B3C2FF\",\n      type: \"rect\",\n      filter: \"Region\",\n    },\n  },\n  {\n    APIRef: \"nucleotide-phosphate-binding-region\",\n    metadata: {\n      name: \"Nucleotide binding\",\n      className: \"nucleobind\",\n      color: \"#B3D1B3\",\n      type: \"rect\",\n      filter: \"Region\",\n    },\n  },\n  {\n    APIRef: \"coiled-coil-region\",\n    metadata: {\n      name: \"Coiled-coil\",\n      className: \"coiledcoil\",\n      color: \"#B3D1C2\",\n      type: \"rect\",\n      filter: \"Region\",\n    },\n  },\n  {\n    APIRef: \"short-sequence-motif\",\n    metadata: {\n      name: \"Sequence motif\",\n      className: \"motif\",\n      color: \"#B3D1D1\",\n      type: \"rect\",\n      filter: \"Region\",\n    },\n  },\n  {\n    APIRef: \"compositionally-biased-region\",\n    metadata: {\n      name: \"Composition bias\",\n      className: \"biased\",\n      color: \"#B3D1E1\",\n      type: \"rect\",\n      filter: \"Region\",\n    },\n  },\n  {\n    APIRef: \"interacting-region\",\n    metadata: {\n      name: \"Interacting region\",\n      className: \"intReg\",\n      color: \"#B3D1F0\",\n      type: \"rect\",\n      filter: \"Region\",\n    },\n  },\n  {\n    APIRef: \"interaction-mapping\",\n    metadata: {\n      name: \"Exp. interaction\",\n      className: \"intregion\",\n      color: \"#B3E1D1\",\n      type: \"rect\",\n      filter: \"Region\",\n    },\n  },\n  {\n    APIRef: \"topological-domain\",\n    metadata: {\n      name: \"Topological domain\",\n      className: \"topodomain\",\n      color: \"#A5DBA5\",\n      type: \"rect\",\n      filter: \"Topology\",\n    },\n  },\n  {\n    APIRef: \"transmembrane-region\",\n    metadata: {\n      name: \"Membrane\",\n      className: \"membrane\",\n      color: \"#A5DBB7\",\n      type: \"rect\",\n      filter: \"Topology\",\n    },\n  },\n  {\n    APIRef: \"intramembrane-region\",\n    metadata: {\n      name: \"Membrane\",\n      className: \"intramembrane\",\n      color: \"#A5DBB7\",\n      type: \"rect\",\n      filter: \"Topology\",\n    },\n  },\n  {\n    APIRef: \"disulfide-bond\",\n    metadata: {\n      name: \"Disulfide bond\",\n      className: \"dsB\",\n      color: \"#B3B3E1\",\n      type: \"path\",\n      filter: \"Modified Residue\",\n    },\n  },\n  {\n    APIRef: \"modified-residue\",\n    metadata: {\n      name: \"Modified residue\",\n      className: \"modifRes\",\n      color: \"#B3C2B3\",\n      type: \"unique\",\n      filter: \"Modified Residue\",\n    },\n  },\n  {\n    APIRef: \"cross-link\",\n    metadata: {\n      name: \"Cross-link\",\n      className: \"crossLink\",\n      color: \"#B3C2C2\",\n      type: \"unique\",\n      filter: \"Modified Residue\",\n    },\n  },\n  {\n    APIRef: \"glycosylation-site\",\n    metadata: {\n      name: \"Glycosylation\",\n      className: \"glycoSite\",\n      color: \"#74E374\",\n      type: \"unique\",\n      filter: \"Modified Residue\",\n    },\n  },\n  {\n    APIRef: \"lipidation-site\",\n    metadata: {\n      name: \"Lipidation\",\n      className: \"lipidation\",\n      color: \"#A3B5DB\",\n      type: \"unique\",\n      filter: \"Modified Residue\",\n    },\n  },\n  {\n    APIRef: \"selenocysteine\",\n    metadata: {\n      name: \"Non-standard AA\",\n      className: \"seleno\",\n      color: \"#859DE7\",\n      type: \"unique\",\n      filter: \"Modified Residue\",\n    },\n  },\n  {\n    APIRef: \"miscellaneous-site\",\n    metadata: {\n      name: \"Site\",\n      className: \"site\",\n      color: \"#B3F0E1\",\n      type: \"unique\",\n      filter: \"Site\",\n    },\n  },\n  {\n    APIRef: \"active-site\",\n    metadata: {\n      name: \"Active site\",\n      className: \"actSite\",\n      color: \"#B3F0F0\",\n      type: \"unique\",\n      filter: \"Site\",\n    },\n  },\n  {\n    APIRef: \"binding-site\",\n    metadata: {\n      name: \"Binding site\",\n      className: \"bindsite\",\n      color: \"#82E6FF\",\n      type: \"unique\",\n      filter: \"Site\",\n    },\n  },\n  {\n    APIRef: \"cleavage-site\",\n    metadata: {\n      name: \"Cleavage site\",\n      className: \"cleavsite\",\n      color: \"#B3FFB3\",\n      type: \"unique\",\n      filter: \"Site\",\n    },\n  },\n  {\n    APIRef: \"metal-binding-site\",\n    metadata: {\n      name: \"Metal binding\",\n      className: \"metal\",\n      color: \"#B3FFC2\",\n      type: \"unique\",\n      filter: \"Site\",\n    },\n  },\n  {\n    APIRef: \"variant\",\n    metadata: {\n      name: \"Variant\",\n      className: \"variant\",\n      color: \"rgba(0,255,154,0.3)\",\n      type: \"unique\",\n      filter: \"Variant\",\n    },\n  },\n  {\n    APIRef: \"mutagenesis\",\n    metadata: {\n      name: \"Mutagenesis\",\n      className: \"mutagenesis\",\n      color: \"#73FFE3\",\n      type: \"unique\",\n      filter: \"Variant\",\n    },\n  },\n  {\n    APIRef: \"sequence-conflict\",\n    metadata: {\n      name: \"Conflict\",\n      className: \"seqconflict\",\n      color: \"#6FFFFF\",\n      type: \"unique\",\n      filter: \"Conflict\",\n    },\n  },\n  // {\n  //   APIRef: \"peptide-mapping\",\n  //   metadata: {\n  //     name: \"Peptide\",\n  //     className: \"pep\",\n  //     color: \"#B3E1D1\",\n  //     type: \"rect\",\n  //     filter: \"Peptide\",\n  //     height: 8,\n  //   },\n  // },\n  {\n    APIRef: \"isoform-mapping\",\n    metadata: {\n      name: \"Isoform\",\n    },\n  },\n];\n","import { NXUtils, NXViewerUtils } from \"feature-viewer\";\n\nimport {\n  FeatsForViewer,\n  FeatureData,\n  FeatureListType,\n  MetaData,\n} from \"../types\";\nimport { featureList } from \"../featureList\";\n\nexport function getFeaturesByView(\n  featureList: FeatureListType[],\n  nx: any,\n  nxEntry: string,\n) {\n  let featuresForViewer = [];\n\n  for (let feat in featureList) {\n    switch (featureList[feat].APIRef) {\n      case \"sequence\":\n        featuresForViewer.push(nx.getProteinSequence(nxEntry));\n        break;\n      case \"antibody\":\n        featuresForViewer.push(nx.getAntibody(nxEntry));\n        break;\n      case \"isoform-mapping\":\n        featuresForViewer.push(nx.getIsoformMapping(nxEntry));\n        break;\n      case \"variant-medical\":\n        featuresForViewer.push(\n          nx.getAnnotationsWithProperty(\n            nxEntry,\n            \"variant\",\n            \"disease-related\",\n            true,\n          ),\n        );\n        break;\n      case \"miscellaneous-region-interactions\":\n        featuresForViewer.push(\n          nx.getAnnotationsWithProperty(\n            nxEntry,\n            \"miscellaneous-region\",\n            \"interaction-related\",\n            true,\n          ),\n        );\n        break;\n      default:\n        featuresForViewer.push(\n          nx.getAnnotationsByCategory(nxEntry, featureList[feat].APIRef),\n        );\n        break;\n    }\n  }\n  return featuresForViewer;\n}\n\nexport function getFeaturesByIsoform(rawData: any, metaData: MetaData[]) {\n  let featuresForViewer = [];\n  let featForViewer;\n\n  for (let i = 1; i < rawData.length - 1; i++) {\n    let feat = NXUtils.convertMappingsToIsoformMap(\n      rawData[i],\n      metaData[i].name.replace(\".\", \"\"),\n      metaData[i].filter,\n      \"\",\n    );\n\n    featForViewer = NXViewerUtils.convertNXAnnotations(feat, metaData[i], {});\n    featuresForViewer.push(featForViewer);\n  }\n  return featuresForViewer;\n}\n\nexport function addFeatures(\n  featuresForViewer: FeatsForViewer[],\n  isoName: string,\n) {\n  let featureList: FeatureData[] = [];\n\n  featuresForViewer.map((currentFeature) => {\n    if (\n      Object.keys(currentFeature).length !== 0 &&\n      Object.prototype.hasOwnProperty.call(currentFeature, isoName)\n    ) {\n      featureList.push({ ...currentFeature[isoName] });\n    }\n  });\n  return featureList;\n}\n\nexport function getMetadataByView() {\n  let metaData: MetaData[] = [];\n\n  featureList.map((_, i) => {\n    metaData.push(featureList[i].metadata);\n  });\n  return metaData;\n}\n","import Papa from \"papaparse\";\n\ntype FileProps = {\n  columns: any;\n  data: Array<Array<[any, number, string, string, number, number]>>;\n  fileType: string;\n};\n\nexport function getExportFileBlob(props: FileProps) {\n  let { columns, data, fileType } = props;\n\n  if (fileType === \"csv\") {\n    const headerNames = columns.map((col: any) => col.exportValue);\n    const csvString = Papa.unparse({ fields: headerNames, data });\n    return new Blob([csvString], { type: \"text/csv\" });\n  }\n}\n","export const ERROR = {\n  NOT_FOUND: \"Couldn't find entry data.\",\n  PARTIAL_RESULTS:\n    \"Please note that variants returning an error have been omitted.\",\n  NO_RESULTS: \"Impossible to return results! Please check your variant data.\",\n};\n\nexport const TABLE_PAGE_SIZE = 10;\n\nexport const INSTRUCTIONS = {\n  1: `Select a variant by clicking on its position in the sequence, entering the desired amino acid variation and clicking on the 'Add' button.`,\n  2: `Select multiple variants by clicking on the 'Add Variants' button and entering the desired variants with their positions.`,\n  3: `The selected variant(s) will be displayed in the variant effect output table.`,\n  4: `Click on the 'Get Predictions' button to view the SIFT and Polyphen-2 scores for the variant(s).`,\n};\n","var _circle, _circle2, _circle3;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLoader(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"L5\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 100 100\",\n    enableBackground: \"new 0 0 0 0\",\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    fill: \"#166ff8\",\n    stroke: \"none\",\n    cx: 6,\n    cy: 50,\n    r: 6\n  }, /*#__PURE__*/React.createElement(\"animateTransform\", {\n    attributeName: \"transform\",\n    dur: \"1s\",\n    type: \"translate\",\n    values: \"0 15 ; 0 -15; 0 15\",\n    repeatCount: \"indefinite\",\n    begin: 0.1\n  }))), _circle2 || (_circle2 = /*#__PURE__*/React.createElement(\"circle\", {\n    fill: \"#166ff8\",\n    stroke: \"none\",\n    cx: 30,\n    cy: 50,\n    r: 6\n  }, /*#__PURE__*/React.createElement(\"animateTransform\", {\n    attributeName: \"transform\",\n    dur: \"1s\",\n    type: \"translate\",\n    values: \"0 10 ; 0 -10; 0 10\",\n    repeatCount: \"indefinite\",\n    begin: 0.2\n  }))), _circle3 || (_circle3 = /*#__PURE__*/React.createElement(\"circle\", {\n    fill: \"#166ff8\",\n    stroke: \"none\",\n    cx: 54,\n    cy: 50,\n    r: 6\n  }, /*#__PURE__*/React.createElement(\"animateTransform\", {\n    attributeName: \"transform\",\n    dur: \"1s\",\n    type: \"translate\",\n    values: \"0 5 ; 0 -5; 0 5\",\n    repeatCount: \"indefinite\",\n    begin: 0.3\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLoader);\nexport default __webpack_public_path__ + \"static/media/loader.678869c4.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState } from \"react\";\nimport CSVReader from \"react-csv-reader\";\nimport { VariantData } from \"../utils/types\";\n\ntype Props = {\n  callGetPredictions: (data: VariantData[]) => void;\n};\n\ntype FileInfo = {\n  name: string;\n  size: number;\n  type: string;\n};\n\nconst papaparseOptions = {\n  header: true,\n  dynamicTyping: true,\n  skipEmptyLines: true,\n  transformHeader: (header: string) => {\n    return header.replace(/\\W/g, \"-\");\n  },\n};\n\nconst CSVUpload = ({ callGetPredictions }: Props) => {\n  const [fileName, setFileName] = useState(\"\");\n\n  const handleForce = (data: VariantData[], fileInfo: FileInfo) => {\n    callGetPredictions(data);\n    setFileName(fileInfo.name);\n  };\n\n  return (\n    <div className=\"csv-button-container\">\n      <div className=\"csv-button\">\n        <button className=\"btn\">Upload CSV and Get Predictions</button>\n        {fileName && <p>{fileName}</p>}\n      </div>\n      <CSVReader\n        cssClass=\"csv-reader-input\"\n        onFileLoaded={handleForce}\n        parserOptions={papaparseOptions}\n        cssInputClass=\"csv-input\"\n      />\n    </div>\n  );\n};\n\nexport default CSVUpload;\n","export default __webpack_public_path__ + \"static/media/down_arrow_icon.4f1d5ef1.svg\";","export default __webpack_public_path__ + \"static/media/up_arrow_icon.6ff07499.svg\";","export default __webpack_public_path__ + \"static/media/sort_icon.86d67f70.svg\";","export default __webpack_public_path__ + \"static/media/info_icon.09c4a3bc.svg\";","export default __webpack_public_path__ + \"static/media/error_icon.ee07de12.svg\";","export default __webpack_public_path__ + \"static/media/github_corner.e1cb9ed8.svg\";","const log = (...data: any) => {\n  if (process.env.REACT_APP_DEVELOPMENT) {\n    console.log(data);\n  }\n};\n\nexport default log;\n","import axios from \"axios\";\nimport log from \"./helpers/logger\";\nimport { IsoformMapping, PredictionData, VariantData } from \"./types\";\n\nconst baseURL = process.env.REACT_APP_API_BASE_URL;\n\nexport async function getPredictions(data: PredictionData) {\n  let res: VariantData[];\n  res = await axios\n    .post(`${baseURL}/vep-results`, data)\n    .then((res) => {\n      return res.data;\n    })\n    .catch((err) => {\n      log(err);\n    });\n\n  return res;\n}\n\nexport async function getIsoformList(entry: string) {\n  let res: IsoformMapping[] | undefined;\n  res = await axios\n    .get(`${baseURL}/mapping-isoforms/${entry}`)\n    .then((res) => {\n      return res.data;\n    })\n    .catch((err) => {\n      log(err);\n    });\n\n  return res;\n}\n","import React from \"react\";\n\nimport { ReactComponent as LoadingIcon } from \"../assets/icons/loader.svg\";\n\ntype LoaderProps = {\n  id?: string;\n};\n\nconst Loader = ({ id }: LoaderProps) => {\n  return (\n    <div id={id} className=\"loader\">\n      <LoadingIcon />\n    </div>\n  );\n};\n\nexport default Loader;\n","import { VariantData } from \"../types\";\n\nexport const parseData = (variantData: VariantData[]) => {\n  const parsedData: VariantData[] = [];\n  const errors: VariantData[] = [];\n\n  variantData.map((data) => {\n    if (data.sift === -1 && data.polyphen == -1) {\n      errors.push(data);\n    } else parsedData.push(data);\n  });\n\n  return { parsedData, errors };\n};\n","import {\n  useTable,\n  useSortBy,\n  usePagination,\n  useGlobalFilter,\n} from \"react-table\";\nimport { useExportData } from \"react-table-plugins\";\nimport React, { useMemo } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport { getExportFileBlob } from \"../utils/helpers/exportFile\";\nimport { VariantData } from \"../utils/types\";\nimport { ERROR, TABLE_PAGE_SIZE } from \"../utils/constants\";\nimport CSVUpload from \"./CSVUpload\";\nimport * as Icon from \"../assets/icons/index\";\nimport { getPredictions } from \"../utils/service\";\nimport Loader from \"./Loader\";\nimport { parseData } from \"../utils/helpers/parseData\";\n\nconst RESULT_COLUMN_DATA = [\n  {\n    Header: \"Position\",\n    accessor: \"nextprotPosition\",\n  },\n  {\n    Header: \"Original\",\n    accessor: \"originalAminoAcid\",\n  },\n  {\n    Header: \"Variant\",\n    accessor: \"variantAminoAcid\",\n  },\n  {\n    Header: \"Sift\",\n    accessor: \"sift\",\n  },\n  {\n    Header: \"Sift Prediction\",\n    accessor: \"siftPrediction\",\n  },\n  {\n    Header: \"Polyphen\",\n    accessor: \"polyphen\",\n  },\n  {\n    Header: \"Polyphen Prediction\",\n    accessor: \"polyphenPrediction\",\n  },\n];\n\ntype TableProps = {\n  predictionLoading: boolean;\n  setPredictionLoading: (predictionLoading: boolean) => void;\n  data: VariantData[];\n  setData: (data: VariantData[]) => void;\n  error: string | undefined;\n  setError: (error: string) => void;\n  isoName: string | undefined;\n  fv: any;\n};\n\nconst Table = (props: TableProps) => {\n  const {\n    predictionLoading,\n    setPredictionLoading,\n    data,\n    setData,\n    error,\n    setError,\n    isoName,\n    fv,\n  } = props;\n\n  const getBackgroundColor = (index: string, cellId: string) => {\n    const POLYPHEN_PREDICTION = {\n      BENIGN: \"benign\",\n      POSSIBLY_DAMAGING: \"possibly_damaging\",\n      PROBABLY_DAMAGING: \"probably_damaging\",\n    };\n\n    const SIFT_PREDICTION = {\n      DELETERIOUS: \"deleterious\",\n      TOLERATED: \"possibly_damaging\",\n    };\n\n    const idx = Number(index);\n    const value =\n      cellId === \"polyphenPrediction\"\n        ? data[idx].polyphenPrediction!\n        : data[idx].siftPrediction!;\n\n    if (\n      value === POLYPHEN_PREDICTION.PROBABLY_DAMAGING ||\n      value === SIFT_PREDICTION.DELETERIOUS\n    )\n      return \"#e56565\";\n    else if (value === POLYPHEN_PREDICTION.BENIGN) return \"#85cc64\";\n    else if (\n      value === POLYPHEN_PREDICTION.POSSIBLY_DAMAGING ||\n      SIFT_PREDICTION.TOLERATED\n    )\n      return \"#ffba5f\";\n  };\n\n  const callGetPredictions = async (csvData: VariantData[]) => {\n    const data = {\n      isoform: isoName,\n      variants: csvData,\n    };\n    setPredictionLoading(true);\n    await getPredictions(data).then((res) => {\n      if (Array.isArray(res) && res.length) {\n        const { parsedData } = parseData(res);\n        if (parsedData.length < data.variants.length)\n          setError(ERROR.PARTIAL_RESULTS);\n        else setError(\"\");\n\n        setData(parsedData);\n        setPredictionLoading(false);\n        return;\n      }\n      setError(ERROR.NO_RESULTS);\n      setPredictionLoading(false);\n    });\n  };\n\n  const columns = useMemo(() => RESULT_COLUMN_DATA, []);\n\n  const getExportFileName = () => {\n    return isoName;\n  };\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    page,\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    state: { pageIndex, pageSize },\n    exportData,\n  } = useTable(\n    {\n      //@ts-ignore\n      columns,\n      data,\n      getExportFileBlob,\n      getExportFileName,\n      initialState: { pageIndex: 0, pageSize: TABLE_PAGE_SIZE },\n    },\n    useGlobalFilter,\n    useSortBy,\n    useExportData,\n    usePagination,\n  );\n\n  return (\n    <div className=\"variant-table-container\">\n      {error && (\n        <div className=\"error-message\">\n          <img src={Icon.Error} alt=\"Error\" />\n          <p>{error}</p>\n        </div>\n      )}\n      <div className=\"table-header\">\n        <CSVUpload callGetPredictions={callGetPredictions} />\n        <div style={{ marginLeft: \"auto\" }}>\n          <button\n            className=\"btn get-predictions-btn\"\n            onClick={() => {\n              let data = fv.getPredictions();\n              callGetPredictions(data);\n            }}\n          >\n            Get Predictions\n          </button>\n          <button\n            className=\"btn\"\n            onClick={() => {\n              exportData(\"csv\", true);\n            }}\n          >\n            Export All as CSV\n          </button>\n        </div>\n      </div>\n      <table {...getTableProps()} className=\"variant-data-table\">\n        <thead>\n          {headerGroups.map((headerGroup) => {\n            return (\n              <tr {...headerGroup.getHeaderGroupProps()} key={uuidv4()}>\n                {headerGroup.headers.map((column) => {\n                  return (\n                    <th\n                      {...column.getHeaderProps(column.getSortByToggleProps())}\n                      key={uuidv4()}\n                    >\n                      {column.render(\"Header\")}\n                      <span>\n                        {column.isSorted ? (\n                          column.isSortedDesc ? (\n                            <img\n                              src={Icon.DownArrow}\n                              className=\"icon\"\n                              alt=\"Down arrow icon\"\n                            />\n                          ) : (\n                            <img\n                              src={Icon.UpArrow}\n                              className=\"icon\"\n                              alt=\"Down arrow icon\"\n                            />\n                          )\n                        ) : (\n                          <img\n                            src={Icon.Sort}\n                            className=\"icon\"\n                            alt=\"Down arrow icon\"\n                          />\n                        )}\n                      </span>\n                    </th>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {page.map((row) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()} key={uuidv4()}>\n                {row.cells.map((cell) => {\n                  return (\n                    <td\n                      style={{\n                        backgroundColor:\n                          cell.column.id === \"polyphenPrediction\" ||\n                          cell.column.id === \"siftPrediction\"\n                            ? getBackgroundColor(cell.row.id, cell.column.id)\n                            : \"#FFF\",\n                      }}\n                      {...cell.getCellProps()}\n                      key={uuidv4()}\n                    >\n                      {cell.render(\"Cell\")}\n                    </td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n      {predictionLoading && (\n        <>\n          <p className=\"table-text\">\n            <i>Fetching predictions...</i>\n          </p>\n          <Loader />\n        </>\n      )}\n      {data.length === 0 && !predictionLoading ? (\n        <p className=\"table-text\">\n          <i>\n            No records added. Add variants and click on get predictions to get\n            results\n          </i>\n          .\n        </p>\n      ) : (\n        <div className=\"pagination\">\n          <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\n            {\"<<\"}\n          </button>{\" \"}\n          <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n            {\"<\"}\n          </button>{\" \"}\n          <button onClick={() => nextPage()} disabled={!canNextPage}>\n            {\">\"}\n          </button>{\" \"}\n          <button\n            onClick={() => gotoPage(pageCount - 1)}\n            disabled={!canNextPage}\n          >\n            {\">>\"}\n          </button>{\" \"}\n          <span>\n            Page{\" \"}\n            <strong>\n              {pageIndex + 1} of {pageOptions.length}\n            </strong>{\" \"}\n          </span>\n          <span>\n            | Go to page:{\" \"}\n            <input\n              type=\"number\"\n              defaultValue={pageIndex + 1 || 1}\n              onChange={(e) => {\n                const page = e.target.value ? Number(e.target.value) - 1 : 0;\n                gotoPage(page);\n              }}\n            />\n          </span>{\" \"}\n          <select\n            value={pageSize}\n            onChange={(e) => {\n              setPageSize(Number(e.target.value));\n            }}\n          >\n            {[10, 20, 30, 40, 50].map((pageSize) => (\n              <option key={pageSize} value={pageSize}>\n                Show {pageSize}\n              </option>\n            ))}\n          </select>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Table;\n","import React, { useState, useEffect, ReactElement } from \"react\";\nimport Select from \"react-select\";\n\nimport * as Icon from \"../assets/icons/index\";\nimport { IsoformMapping } from \"../utils/types\";\n\ntype IsoformProps = {\n  isoName?: string;\n  isoform: IsoformMapping[];\n  handleIsoformChange: (value: string) => void;\n};\n\ntype Option = {\n  value: string;\n  label: string | ReactElement;\n  disabled: boolean;\n};\n\ntype Label = {\n  offset: number;\n  isoform: string;\n};\n\nconst LabelComponent = (props: Label) => {\n  const { offset, isoform } = props;\n  return (\n    <>\n      {offset < 0 ? (\n        <div className=\"isoform-info\">\n          {isoform}\n          <img\n            title=\"Isoform mapping not available\"\n            src={Icon.Info}\n            className=\"icon\"\n            alt=\"Info Icon\"\n          />\n        </div>\n      ) : (\n        isoform\n      )}\n    </>\n  );\n};\n\nconst Isoform = ({ isoform, handleIsoformChange }: IsoformProps) => {\n  const [options, setOptions] = useState<Option[]>();\n  const [selectedOption, setSelectedOption] = useState<Option>();\n\n  useEffect(() => {\n    let optionMap: Option[] = [];\n    isoform.map((iso: IsoformMapping) => {\n      let option: Option = {\n        value: iso.isoform,\n        label: <LabelComponent isoform={iso.isoform} offset={iso.offset} />,\n        disabled: iso.offset < 0 ? true : false,\n      };\n      optionMap.push(option);\n    });\n    setOptions(optionMap);\n    setSelectedOption(optionMap[0]);\n  }, [isoform]);\n\n  if (!options) {\n    return <></>;\n  }\n\n  return (\n    <div className=\"isoform-select-wrapper\">\n      <p>Change Isoform</p>\n      <Select\n        className=\"isoform-select\"\n        options={options}\n        value={selectedOption}\n        isOptionDisabled={(option: Option) => option.disabled}\n        defaultValue={selectedOption}\n        onChange={(option) => {\n          handleIsoformChange(option!.value);\n          setSelectedOption(option!);\n        }}\n      />\n    </div>\n  );\n};\n\nexport default Isoform;\n","import React, { useEffect, useState } from \"react\";\nimport { Nextprot, createFeature } from \"feature-viewer\";\n\nimport { featureList } from \"../utils/featureList\";\nimport {\n  getFeaturesByView,\n  getFeaturesByIsoform,\n  addFeatures,\n  getMetadataByView,\n} from \"../utils/helpers/getFeatures\";\nimport Table from \"./Table\";\nimport Isoform from \"./Isoform\";\nimport {\n  FeatsForViewer,\n  FeatureData,\n  IsoformMapping,\n  IsoformType,\n  MetaData,\n  VariantData,\n} from \"../utils/types\";\nimport Loader from \"./Loader\";\nimport { ERROR } from \"../utils/constants\";\nimport { getIsoformList, getPredictions } from \"../utils/service\";\nimport log from \"../utils/helpers/logger\";\nimport { parseData } from \"../utils/helpers/parseData\";\n\nconst FeatureViewerComponent = () => {\n  const [data, setData] = useState<VariantData[] | []>([]);\n  const [isoform, setIsoform] = useState<IsoformMapping[]>();\n  const [sequence, setSequence] = useState<IsoformType[]>();\n  const [isoName, setIsoName] = useState<string>();\n  const [features, setFeatures] = useState<FeatsForViewer[]>();\n  const [error, setError] = useState<string | undefined>();\n  const [loading, setLoading] = useState(true);\n  const [predictionLoading, setPredictionLoading] = useState(false);\n  const [fv, setFv] = useState<any>();\n\n  const CONTAINER_ID = \"fv1\";\n  const nx = new Nextprot.Client(\"Calipho Group\", \"VEP community tool\");\n\n  function buildFeatures(\n    fv: any,\n    sequences: IsoformType[],\n    isoName: string,\n    features: FeatureData[],\n  ) {\n    sequences.forEach(function (seq: IsoformType) {\n      if (seq.uniqueName === isoName) {\n        let featureViewer = new createFeature(seq.sequence, \"#fv1\", {\n          showAxis: true,\n          showSequence: true,\n          brushActive: true,\n          toolbar: true,\n          bubbleHelp: false,\n          zoomMax: 10,\n          variant: true,\n        });\n\n        setFv(featureViewer);\n\n        features.map((feat: FeatureData) => {\n          featureViewer.addFeature(feat);\n        });\n\n        featureViewer.onVariantChanged((d: CustomEvent) => {\n          setData([...d.detail]);\n        });\n\n        featureViewer.onGetPredictions((d: CustomEvent) => {\n          setPredictionLoading(true);\n          let data = {\n            isoform: isoName,\n            variants: d.detail,\n          };\n\n          getPredictions(data).then((res) => {\n            if (Array.isArray(res) && res.length) {\n              const { parsedData } = parseData(res);\n              if (parsedData.length < data.variants.length)\n                setError(ERROR.PARTIAL_RESULTS);\n              else setError(\"\");\n\n              setData(parsedData);\n              setPredictionLoading(false);\n              return;\n            }\n            setError(ERROR.NO_RESULTS);\n            setPredictionLoading(false);\n          });\n        });\n      }\n    });\n  }\n\n  function handleIsoformChange(value: string) {\n    setIsoName(value);\n    document.getElementById(CONTAINER_ID)!.innerHTML = \"\";\n    const featureList: FeatureData[] = addFeatures(features!, value);\n    buildFeatures(fv, sequence!, value, featureList);\n  }\n\n  useEffect(() => {\n    const params = new URLSearchParams(window.location.search);\n    const paramEntry: string | null = params.get(\"nxentry\");\n\n    getIsoformList(paramEntry!).then((res) => {\n      setIsoform(res);\n    });\n\n    let sequences: IsoformType[];\n    let features: FeatureData[];\n\n    Promise.all(getFeaturesByView(featureList, nx, paramEntry!))\n      .then((rawData) => {\n        if (rawData) {\n          sequences = rawData[0];\n          const metadata: MetaData[] = getMetadataByView();\n          const featsForViewer: FeatsForViewer[] = getFeaturesByIsoform(\n            rawData,\n            metadata,\n          );\n          features = addFeatures(featsForViewer, sequences[0].isoformAccession);\n          buildFeatures(fv, sequences, sequences[0].isoformAccession, features);\n\n          setSequence(sequences);\n          setFeatures(featsForViewer);\n          setIsoName(sequences[0].isoformAccession);\n          setLoading(false);\n        } else {\n          setError(ERROR.NOT_FOUND);\n        }\n      })\n      .catch((err) => {\n        log(err);\n      });\n  }, []);\n\n  return (\n    <>\n      {loading && <Loader id=\"feature-loader\" />}\n      <div className=\"viewer-container\">\n        {isoform && !error && (\n          <Isoform\n            isoName={isoName}\n            isoform={isoform}\n            handleIsoformChange={handleIsoformChange}\n          />\n        )}\n        <div id=\"fv1\" />\n        <Table\n          predictionLoading={predictionLoading}\n          setPredictionLoading={setPredictionLoading}\n          data={data}\n          setData={setData}\n          error={error}\n          setError={setError}\n          isoName={isoName}\n          fv={fv}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default FeatureViewerComponent;\n","import React from \"react\";\nimport { INSTRUCTIONS } from \"../utils/constants\";\n\nconst Instructions = () => {\n  return (\n    <div className=\"instructions-container\">\n      <h3>instructions</h3>\n      {Object.entries(INSTRUCTIONS).map(([key, value]) => {\n        return (\n          <div className=\"instructions-list\" key={value}>\n            <h5>{key}</h5>\n            <p>{value}</p>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Instructions;\n","import React from \"react\";\n\nconst Header = () => {\n  return (\n    <div className=\"header\">\n      <h1>\n        The Variant Effect Predictor (VEP) helps scientists determine the\n        potential impact of non-synonymous single amino acid variants (SAAVs) by\n        returning the SIFT and Polyphen-2 scores.\n      </h1>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nimport * as Icon from \"../assets/icons\";\n\nconst Footer = () => {\n  return (\n    <div className=\"footer\">\n      The VEP Community Tool is being developed as open source. All the software\n      packages are being actively maintained on{\" \"}\n      <a\n        href=\"https://github.com/calipho-sib/VEP-community-tool\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        GitHub\n      </a>{\" \"}\n      and we encourage organizations and individuals to contribute requirements,\n      documentation, issues, new templates, and code.\n      <img\n        className=\"github-corner\"\n        src={Icon.GithubCorner}\n        alt=\"GitHub Icon\"\n      />\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport FeatureViewerComponent from \"./components/FeatureViewer\";\nimport \"./App.css\";\nimport Instructions from \"./components/Instructions\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Instructions />\n      <FeatureViewerComponent />\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(`web-vitals`).then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}