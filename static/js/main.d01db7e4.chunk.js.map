{"version":3,"sources":["utils/featureList.ts","utils/helpers/getFeatures.ts","utils/helpers/exportFile.ts","utils/constants.ts","assets/icons/loader.svg","components/CSVUpload.tsx","assets/icons/down_arrow_icon.svg","assets/icons/up_arrow_icon.svg","assets/icons/sort_icon.svg","assets/icons/info_icon.svg","assets/icons/error_icon.svg","assets/icons/github_corner.svg","utils/helpers/logger.ts","utils/service.ts","components/Loader.tsx","utils/helpers/parseData.ts","components/CSVInstructions.tsx","components/Table.tsx","components/Isoform.tsx","components/FeatureViewer.tsx","components/Instructions.tsx","components/Header.tsx","components/Footer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["featureList","APIRef","metadata","name","className","color","type","filter","addFeatures","featuresForViewer","isoName","map","currentFeature","Object","keys","length","prototype","hasOwnProperty","call","push","getExportFileBlob","props","columns","data","fileType","headerNames","col","exportValue","csvString","Papa","unparse","fields","Blob","_circle","_circle2","_circle3","ERROR","INSTRUCTIONS","papaparseOptions","header","dynamicTyping","skipEmptyLines","transformHeader","replace","beforeFirstChunk","chunk","startsWith","split","match","substring","indexOf","concat","CSVUpload","callGetPredictions","useState","fileName","setFileName","cssClass","onFileLoaded","fileInfo","parserOptions","cssInputClass","log","process","REACT_APP_DEVELOPMENT","console","baseURL","getPredictions","a","axios","post","then","res","catch","err","entry","get","_excluded","_extends","assign","target","i","arguments","source","key","apply","this","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgLoader","_ref","svgRef","title","titleId","id","xmlns","xmlnsXlink","x","y","viewBox","enableBackground","xmlSpace","ref","fill","stroke","cx","cy","r","attributeName","dur","values","repeatCount","begin","ForwardRef","Loader","parseData","variantData","parsedData","errors","status","sift","polyphen","CSVInstructions","href","rel","RESULT_COLUMN_DATA","Header","accessor","Table","predictionLoading","setPredictionLoading","setData","error","setError","fv","dataLimitExceeded","getTagClassname","errorRow","rowHeader","getBackgroundColor","index","cellId","getColumnColor","POLYPHEN_PREDICTION","BENIGN","POSSIBLY_DAMAGING","PROBABLY_DAMAGING","SIFT_PREDICTION","DELETERIOUS","TOLERATED","idx","Number","value","polyphenPrediction","siftPrediction","getCellContent","cell","render","csvData","isoform","variants","slice","Array","isArray","useMemo","useTable","getExportFileName","initialState","pageIndex","pageSize","useGlobalFilter","useSortBy","useExportData","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","exportData","src","Icon","alt","style","marginLeft","onClick","headerGroup","getHeaderGroupProps","uuidv4","headers","column","getHeaderProps","getSortByToggleProps","isSorted","isSortedDesc","row","getRowProps","cells","backgroundColor","getCellProps","disabled","defaultValue","onChange","e","LabelComponent","offset","Isoform","handleIsoformChange","options","setOptions","selectedOption","setSelectedOption","useEffect","optionMap","iso","option","label","isOptionDisabled","FeatureViewerComponent","setIsoform","sequence","setSequence","setIsoName","features","setFeatures","loading","setLoading","setFv","nx","Nextprot","Client","buildFeatures","sequences","forEach","seq","uniqueName","featureViewer","createFeature","showAxis","showSequence","brushActive","toolbar","bubbleHelp","zoomMax","variant","feat","addFeature","onVariantChanged","d","detail","onGetPredictions","paramEntry","URLSearchParams","window","location","search","getIsoformList","Promise","all","nxEntry","getProteinSequence","getAntibody","getIsoformMapping","getAnnotationsWithProperty","getAnnotationsByCategory","getFeaturesByView","rawData","featsForViewer","metaData","featForViewer","NXUtils","convertMappingsToIsoformMap","NXViewerUtils","convertNXAnnotations","frequencyFeature","frequencyMinValues","annot","apicategory","variantAnnotation","targetingIsoformsMap","frequencyEvidence","evidences","evidence","assignedBy","frequency","properties","variantFrequencyDetails","variantDescription","original","Math","log10","frequencyFeatureForViewer","getFeaturesByIsoform","_","getMetadataByView","isoformAccession","document","getElementById","innerHTML","Instructions","entries","Footer","App","FeatureViewer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.d01db7e4.chunk.js","sourcesContent":["import { FeatureListType } from \"./types\";\n\nexport const featureList: FeatureListType[] = [\n  {\n    APIRef: \"sequence\",\n    metadata: { name: \"Sequence\" },\n  },\n  {\n    APIRef: \"beta-strand\",\n    metadata: {\n      name: \"Beta strand\",\n      className: \"betastrand\",\n      color: \"#B3F0C2\",\n      type: \"rect\",\n      filter: \"Secondary structure\",\n    },\n  },\n  {\n    APIRef: \"helix\",\n    metadata: {\n      name: \"Helix\",\n      className: \"helix\",\n      color: \"#B3F0D1\",\n      type: \"rect\",\n      filter: \"Secondary structure\",\n    },\n  },\n  {\n    APIRef: \"turn\",\n    metadata: {\n      name: \"Turn\",\n      className: \"turn\",\n      color: \"#B3F0E1\",\n      type: \"rect\",\n      filter: \"Secondary structure\",\n    },\n  },\n  {\n    APIRef: \"signal-peptide\",\n    metadata: {\n      name: \"Signal peptide\",\n      className: \"sign\",\n      color: \"#B3B3E1\",\n      type: \"rect\",\n      filter: \"Processing\",\n    },\n  },\n  {\n    APIRef: \"propeptide\",\n    metadata: {\n      name: \"Propeptide\",\n      className: \"pro\",\n      color: \"#B3B3B3\",\n      type: \"rect\",\n      filter: \"Processing\",\n    },\n  },\n  {\n    APIRef: \"mature-protein\",\n    metadata: {\n      name: \"Mature protein\",\n      className: \"mat\",\n      color: \"#B3B3C2\",\n      type: \"rect\",\n      filter: \"Processing\",\n    },\n  },\n  {\n    APIRef: \"initiator-methionine\",\n    metadata: {\n      name: \"Initiator Met\",\n      className: \"initMeth\",\n      color: \"#B3B3D1\",\n      type: \"unique\",\n      filter: \"Processing\",\n    },\n  },\n  {\n    APIRef: \"peroxisome-transit-peptide\",\n    metadata: {\n      name: \"Transit peptide\",\n      className: \"pero\",\n      color: \"#B3B3F0\",\n      type: \"rect\",\n      filter: \"Processing\",\n    },\n  },\n  {\n    APIRef: \"mitochondrial-transit-peptide\",\n    metadata: {\n      name: \"Transit peptide\",\n      className: \"mito\",\n      color: \"#B3B3F0\",\n      type: \"rect\",\n      filter: \"Processing\",\n    },\n  },\n  {\n    APIRef: \"domain\",\n    metadata: {\n      name: \"Domain\",\n      className: \"domain\",\n      color: \"#B3C2C2\",\n      type: \"rect\",\n      filter: \"Region\",\n    },\n  },\n  {\n    APIRef: \"miscellaneous-region\",\n    metadata: {\n      name: \"Region\",\n      className: \"miscregion\",\n      color: \"#B3C2B3\",\n      type: \"rect\",\n      filter: \"Region\",\n    },\n  },\n  {\n    APIRef: \"repeat\",\n    metadata: {\n      name: \"Repeat\",\n      className: \"repeat\",\n      color: \"#98B7D5\",\n      type: \"rect\",\n      filter: \"Region\",\n    },\n  },\n  {\n    APIRef: \"calcium-binding-region\",\n    metadata: {\n      name: \"Calcium binding\",\n      className: \"calcium\",\n      color: \"#B3C2E1\",\n      type: \"rect\",\n      filter: \"Region\",\n    },\n  },\n  {\n    APIRef: \"zinc-finger-region\",\n    metadata: {\n      name: \"Zinc finger\",\n      className: \"calcium\",\n      color: \"#B3C2E1\",\n      type: \"rect\",\n      filter: \"Region\",\n    },\n  },\n  {\n    APIRef: \"dna-binding-region\",\n    metadata: {\n      name: \"DNA binding\",\n      className: \"dnabind\",\n      color: \"#B3C2FF\",\n      type: \"rect\",\n      filter: \"Region\",\n    },\n  },\n  {\n    APIRef: \"nucleotide-phosphate-binding-region\",\n    metadata: {\n      name: \"Nucleotide binding\",\n      className: \"nucleobind\",\n      color: \"#B3D1B3\",\n      type: \"rect\",\n      filter: \"Region\",\n    },\n  },\n  {\n    APIRef: \"coiled-coil-region\",\n    metadata: {\n      name: \"Coiled-coil\",\n      className: \"coiledcoil\",\n      color: \"#B3D1C2\",\n      type: \"rect\",\n      filter: \"Region\",\n    },\n  },\n  {\n    APIRef: \"short-sequence-motif\",\n    metadata: {\n      name: \"Sequence motif\",\n      className: \"motif\",\n      color: \"#B3D1D1\",\n      type: \"rect\",\n      filter: \"Region\",\n    },\n  },\n  {\n    APIRef: \"compositionally-biased-region\",\n    metadata: {\n      name: \"Composition bias\",\n      className: \"biased\",\n      color: \"#B3D1E1\",\n      type: \"rect\",\n      filter: \"Region\",\n    },\n  },\n  {\n    APIRef: \"interacting-region\",\n    metadata: {\n      name: \"Interacting region\",\n      className: \"intReg\",\n      color: \"#B3D1F0\",\n      type: \"rect\",\n      filter: \"Region\",\n    },\n  },\n  {\n    APIRef: \"interaction-mapping\",\n    metadata: {\n      name: \"Exp. interaction\",\n      className: \"intregion\",\n      color: \"#B3E1D1\",\n      type: \"rect\",\n      filter: \"Region\",\n    },\n  },\n  {\n    APIRef: \"topological-domain\",\n    metadata: {\n      name: \"Topological domain\",\n      className: \"topodomain\",\n      color: \"#A5DBA5\",\n      type: \"rect\",\n      filter: \"Topology\",\n    },\n  },\n  {\n    APIRef: \"transmembrane-region\",\n    metadata: {\n      name: \"Membrane\",\n      className: \"membrane\",\n      color: \"#A5DBB7\",\n      type: \"rect\",\n      filter: \"Topology\",\n    },\n  },\n  {\n    APIRef: \"intramembrane-region\",\n    metadata: {\n      name: \"Membrane\",\n      className: \"intramembrane\",\n      color: \"#A5DBB7\",\n      type: \"rect\",\n      filter: \"Topology\",\n    },\n  },\n  {\n    APIRef: \"disulfide-bond\",\n    metadata: {\n      name: \"Disulfide bond\",\n      className: \"dsB\",\n      color: \"#B3B3E1\",\n      type: \"path\",\n      filter: \"Modified Residue\",\n    },\n  },\n  {\n    APIRef: \"modified-residue\",\n    metadata: {\n      name: \"Modified residue\",\n      className: \"modifRes\",\n      color: \"#B3C2B3\",\n      type: \"unique\",\n      filter: \"Modified Residue\",\n    },\n  },\n  {\n    APIRef: \"cross-link\",\n    metadata: {\n      name: \"Cross-link\",\n      className: \"crossLink\",\n      color: \"#B3C2C2\",\n      type: \"unique\",\n      filter: \"Modified Residue\",\n    },\n  },\n  {\n    APIRef: \"glycosylation-site\",\n    metadata: {\n      name: \"Glycosylation\",\n      className: \"glycoSite\",\n      color: \"#74E374\",\n      type: \"unique\",\n      filter: \"Modified Residue\",\n    },\n  },\n  {\n    APIRef: \"lipidation-site\",\n    metadata: {\n      name: \"Lipidation\",\n      className: \"lipidation\",\n      color: \"#A3B5DB\",\n      type: \"unique\",\n      filter: \"Modified Residue\",\n    },\n  },\n  {\n    APIRef: \"selenocysteine\",\n    metadata: {\n      name: \"Non-standard AA\",\n      className: \"seleno\",\n      color: \"#859DE7\",\n      type: \"unique\",\n      filter: \"Modified Residue\",\n    },\n  },\n  {\n    APIRef: \"miscellaneous-site\",\n    metadata: {\n      name: \"Site\",\n      className: \"site\",\n      color: \"#B3F0E1\",\n      type: \"unique\",\n      filter: \"Site\",\n    },\n  },\n  {\n    APIRef: \"active-site\",\n    metadata: {\n      name: \"Active site\",\n      className: \"actSite\",\n      color: \"#B3F0F0\",\n      type: \"unique\",\n      filter: \"Site\",\n    },\n  },\n  {\n    APIRef: \"binding-site\",\n    metadata: {\n      name: \"Binding site\",\n      className: \"bindsite\",\n      color: \"#82E6FF\",\n      type: \"unique\",\n      filter: \"Site\",\n    },\n  },\n  {\n    APIRef: \"cleavage-site\",\n    metadata: {\n      name: \"Cleavage site\",\n      className: \"cleavsite\",\n      color: \"#B3FFB3\",\n      type: \"unique\",\n      filter: \"Site\",\n    },\n  },\n  {\n    APIRef: \"metal-binding-site\",\n    metadata: {\n      name: \"Metal binding\",\n      className: \"metal\",\n      color: \"#B3FFC2\",\n      type: \"unique\",\n      filter: \"Site\",\n    },\n  },\n  {\n    APIRef: \"variant\",\n    metadata: {\n      name: \"Variant\",\n      className: \"variant\",\n      color: \"rgba(0,255,154,0.3)\",\n      type: \"unique\",\n      filter: \"Variant\",\n    },\n  },\n  {\n    APIRef: \"mutagenesis\",\n    metadata: {\n      name: \"Mutagenesis\",\n      className: \"mutagenesis\",\n      color: \"#73FFE3\",\n      type: \"unique\",\n      filter: \"Variant\",\n    },\n  },\n  {\n    APIRef: \"sequence-conflict\",\n    metadata: {\n      name: \"Conflict\",\n      className: \"seqconflict\",\n      color: \"#6FFFFF\",\n      type: \"unique\",\n      filter: \"Conflict\",\n    },\n  },\n  // {\n  //   APIRef: \"peptide-mapping\",\n  //   metadata: {\n  //     name: \"Peptide\",\n  //     className: \"pep\",\n  //     color: \"#B3E1D1\",\n  //     type: \"rect\",\n  //     filter: \"Peptide\",\n  //     height: 8,\n  //   },\n  // },\n  {\n    APIRef: \"isoform-mapping\",\n    metadata: {\n      name: \"Isoform\",\n    },\n  },\n];\n","import { NXUtils, NXViewerUtils } from \"feature-viewer\";\n\nimport {\n  FeatsForViewer,\n  FeatureData,\n  FeatureListType,\n  MetaData,\n} from \"../types\";\nimport { featureList } from \"../featureList\";\n\nexport function getFeaturesByView(\n  featureList: FeatureListType[],\n  nx: any,\n  nxEntry: string,\n) {\n  let featuresForViewer = [];\n\n  for (let feat in featureList) {\n    switch (featureList[feat].APIRef) {\n      case \"sequence\":\n        featuresForViewer.push(nx.getProteinSequence(nxEntry));\n        break;\n      case \"antibody\":\n        featuresForViewer.push(nx.getAntibody(nxEntry));\n        break;\n      case \"isoform-mapping\":\n        featuresForViewer.push(nx.getIsoformMapping(nxEntry));\n        break;\n      case \"variant-medical\":\n        featuresForViewer.push(\n          nx.getAnnotationsWithProperty(\n            nxEntry,\n            \"variant\",\n            \"disease-related\",\n            true,\n          ),\n        );\n        break;\n      case \"miscellaneous-region-interactions\":\n        featuresForViewer.push(\n          nx.getAnnotationsWithProperty(\n            nxEntry,\n            \"miscellaneous-region\",\n            \"interaction-related\",\n            true,\n          ),\n        );\n        break;\n      default:\n        featuresForViewer.push(\n          nx.getAnnotationsByCategory(nxEntry, featureList[feat].APIRef),\n        );\n        break;\n    }\n  }\n  return featuresForViewer;\n}\n\nexport function getFeaturesByIsoform(rawData: any, metaData: MetaData[]) {\n  let featuresForViewer = [];\n  let featForViewer;\n\n  for (let i = 1; i < rawData.length - 1; i++) {\n    let feat = NXUtils.convertMappingsToIsoformMap(\n      rawData[i],\n      metaData[i].name.replace(\".\", \"\"),\n      metaData[i].filter,\n      \"\",\n    );\n\n    featForViewer = NXViewerUtils.convertNXAnnotations(feat, metaData[i], {});\n\n    let frequencyFeature: any = {};\n    let frequencyMinValues: any = {};\n    if (rawData[i].annot.length > 0) {\n      if (rawData[i].annot[0].apicategory === \"VARIANT\") {\n        // Get target isoform details\n        rawData[i].annot.map(function (variant: any) {\n          let variantAnnotation = variant;\n          // Add isoforms available\n          Object.keys(variant.targetingIsoformsMap).forEach((isoform) => {\n            if (!(isoform in frequencyFeature)) {\n              frequencyFeature[isoform] = [];\n            }\n\n            let frequencyEvidence = variant.evidences.filter(\n              (evidence: any) => {\n                return evidence.assignedBy === \"gnomAD\";\n              },\n            );\n\n            if (frequencyEvidence.length > 0) {\n              frequencyEvidence = frequencyEvidence[0];\n              let frequency = Number(\n                frequencyEvidence.properties[\"allele frequency\"],\n              );\n\n              // Check if the variant has isoform specific position\n              let variantFrequencyDetails: any = {};\n              variantFrequencyDetails[\"x\"] =\n                variant.targetingIsoformsMap[isoform][\"firstPosition\"];\n              variantFrequencyDetails[\"y\"] = frequency;\n              variantFrequencyDetails[\n                \"id\"\n              ] = `FREQUENCY_Variant_${variantFrequencyDetails[\"x\"]}_${variantFrequencyDetails[\"x\"]}_${variantAnnotation.uniqueName}`;\n              variantFrequencyDetails[\"category\"] = \"Frequency\";\n              let variantDescription = `${variantAnnotation.variant.original} → ${variantAnnotation.variant.variant}`;\n\n              variantFrequencyDetails[\n                \"description\"\n              ] = `<span>${variant.targetingIsoformsMap[isoform][\"firstPosition\"]}<br/>${variantDescription}<br/>${frequency}</span>`;\n              frequencyFeature[isoform].push(variantFrequencyDetails);\n\n              if (isoform in frequencyMinValues) {\n                if (frequencyMinValues[isoform] > frequency) {\n                  frequencyMinValues[isoform] = frequency;\n                }\n              } else {\n                frequencyMinValues[isoform] = frequency;\n              }\n            }\n          });\n        });\n      }\n\n      Object.keys(frequencyFeature).forEach(function (isoform) {\n        frequencyFeature[isoform].forEach(function (variant: any) {\n          variant[\"y\"] =\n            -Math.log10(frequencyMinValues[isoform]) +\n            0.2 +\n            Math.log10(variant[\"y\"]);\n        });\n      });\n\n      if (Object.keys(frequencyFeature).length !== 0) {\n        let frequencyFeatureForViewer: any = {};\n        Object.keys(frequencyFeature).forEach(function (key) {\n          let x = {\n            className: \"freq\",\n            color: \"#B3B3C2\",\n            name: \"Frequency (Log)\",\n            type: \"bar\",\n            filter: \"Frequency\",\n            data: frequencyFeature[key],\n          };\n          frequencyFeatureForViewer[key] = x;\n        });\n        featuresForViewer.push(frequencyFeatureForViewer);\n      }\n    }\n    featuresForViewer.push(featForViewer);\n  }\n  return featuresForViewer;\n}\n\nexport function addFeatures(\n  featuresForViewer: FeatsForViewer[],\n  isoName: string,\n) {\n  let featureList: FeatureData[] = [];\n\n  featuresForViewer.map((currentFeature) => {\n    if (\n      Object.keys(currentFeature).length !== 0 &&\n      Object.prototype.hasOwnProperty.call(currentFeature, isoName)\n    ) {\n      featureList.push({ ...currentFeature[isoName] });\n    }\n  });\n  return featureList;\n}\n\nexport function getMetadataByView() {\n  let metaData: MetaData[] = [];\n\n  featureList.map((_, i) => {\n    metaData.push(featureList[i].metadata);\n  });\n  return metaData;\n}\n","import Papa from \"papaparse\";\n\ntype FileProps = {\n  columns: any;\n  data: Array<Array<[any, number, string, string, number, number]>>;\n  fileType: string;\n};\n\nexport function getExportFileBlob(props: FileProps) {\n  let { columns, data, fileType } = props;\n\n  if (fileType === \"csv\") {\n    const headerNames = columns.map((col: any) => col.exportValue);\n    const csvString = Papa.unparse({ fields: headerNames, data });\n    return new Blob([csvString], { type: \"text/csv\" });\n  }\n}\n","export const ERROR = {\n  NOT_FOUND: \"Couldn't find entry data.\",\n  PARTIAL_RESULTS:\n    \"Please note that variants returning an error have been omitted.\",\n  LIMIT_EXCEEDED:\n    \"You have exceeded the limit of 200 variants, only partial results are shown\",\n  NO_RESULTS: \"Impossible to return results! Please check your variant data.\",\n};\n\nexport const TABLE_PAGE_SIZE = 10;\n\nexport const INSTRUCTIONS = {\n  1: `Select a missense variant by clicking on its position in the sequence, entering the desired amino acid variation and clicking on the 'Add' button.`,\n  2: `Select multiple missense variants by clicking on the 'Add Variants' button and entering the desired variants with their positions.`,\n  3: `The selected variant(s) will be displayed in the variant effect output table.`,\n  4: `Click on the 'Get Predictions' button to view the SIFT and Polyphen-2 scores for the variant(s).`,\n};\n","var _circle, _circle2, _circle3;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLoader(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"L5\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 100 100\",\n    enableBackground: \"new 0 0 0 0\",\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    fill: \"#166ff8\",\n    stroke: \"none\",\n    cx: 6,\n    cy: 50,\n    r: 6\n  }, /*#__PURE__*/React.createElement(\"animateTransform\", {\n    attributeName: \"transform\",\n    dur: \"1s\",\n    type: \"translate\",\n    values: \"0 15 ; 0 -15; 0 15\",\n    repeatCount: \"indefinite\",\n    begin: 0.1\n  }))), _circle2 || (_circle2 = /*#__PURE__*/React.createElement(\"circle\", {\n    fill: \"#166ff8\",\n    stroke: \"none\",\n    cx: 30,\n    cy: 50,\n    r: 6\n  }, /*#__PURE__*/React.createElement(\"animateTransform\", {\n    attributeName: \"transform\",\n    dur: \"1s\",\n    type: \"translate\",\n    values: \"0 10 ; 0 -10; 0 10\",\n    repeatCount: \"indefinite\",\n    begin: 0.2\n  }))), _circle3 || (_circle3 = /*#__PURE__*/React.createElement(\"circle\", {\n    fill: \"#166ff8\",\n    stroke: \"none\",\n    cx: 54,\n    cy: 50,\n    r: 6\n  }, /*#__PURE__*/React.createElement(\"animateTransform\", {\n    attributeName: \"transform\",\n    dur: \"1s\",\n    type: \"translate\",\n    values: \"0 5 ; 0 -5; 0 5\",\n    repeatCount: \"indefinite\",\n    begin: 0.3\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLoader);\nexport default __webpack_public_path__ + \"static/media/loader.678869c4.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState } from \"react\";\nimport CSVReader from \"react-csv-reader\";\nimport { VariantData } from \"../utils/types\";\n\ntype Props = {\n  callGetPredictions: (data: VariantData[]) => void;\n};\n\ntype FileInfo = {\n  name: string;\n  size: number;\n  type: string;\n};\n\nconst header = \"nextprotPosition,originalAminoAcid,variantAminoAcid\\r\\n\";\n\nconst papaparseOptions = {\n  header: true,\n  dynamicTyping: true,\n  skipEmptyLines: true,\n  transformHeader: (header: string) => {\n    return header.replace(/\\W/g, \"-\");\n  },\n  beforeFirstChunk(chunk: string): string | void {\n    if (!chunk.startsWith(\"nextprotPosition\")) {\n      // Check if there is another header\n      if (!chunk.split(\",\")[0].match(\"^[0-9]+ \")) {\n        // Need to remove the header first\n        chunk = chunk.substring(chunk.indexOf(\"\\n\") + 1, chunk.length);\n      }\n      chunk = header.concat(chunk);\n      return chunk;\n    }\n  },\n};\n\nconst CSVUpload = ({ callGetPredictions }: Props) => {\n  const [fileName, setFileName] = useState(\"\");\n\n  const handleForce = (data: VariantData[], fileInfo: FileInfo) => {\n    callGetPredictions(data);\n    setFileName(fileInfo.name);\n  };\n\n  return (\n    <div className=\"csv-button-container\">\n      <div className=\"csv-button\">\n        <button className=\"btn\">Upload CSV and Get Predictions</button>\n        {fileName && <p>{fileName}</p>}\n      </div>\n      <CSVReader\n        cssClass=\"csv-reader-input\"\n        onFileLoaded={handleForce}\n        parserOptions={papaparseOptions}\n        cssInputClass=\"csv-input\"\n      />\n    </div>\n  );\n};\n\nexport default CSVUpload;\n","export default __webpack_public_path__ + \"static/media/down_arrow_icon.4f1d5ef1.svg\";","export default __webpack_public_path__ + \"static/media/up_arrow_icon.6ff07499.svg\";","export default __webpack_public_path__ + \"static/media/sort_icon.86d67f70.svg\";","export default __webpack_public_path__ + \"static/media/info_icon.09c4a3bc.svg\";","export default __webpack_public_path__ + \"static/media/error_icon.ee07de12.svg\";","export default __webpack_public_path__ + \"static/media/github_corner.e1cb9ed8.svg\";","const log = (...data: any) => {\n  if (process.env.REACT_APP_DEVELOPMENT) {\n    console.log(data);\n  }\n};\n\nexport default log;\n","import axios from \"axios\";\nimport log from \"./helpers/logger\";\nimport { IsoformMapping, PredictionData, VariantData } from \"./types\";\n\nconst baseURL = process.env.REACT_APP_API_BASE_URL;\n\nexport async function getPredictions(data: PredictionData) {\n  let res: VariantData[];\n  res = await axios\n    .post(`${baseURL}/vep-results`, data)\n    .then((res) => {\n      return res.data;\n    })\n    .catch((err) => {\n      log(err);\n    });\n\n  return res;\n}\n\nexport async function getIsoformList(entry: string) {\n  let res: IsoformMapping[] | undefined;\n  res = await axios\n    .get(`${baseURL}/mapping-isoforms/${entry}`)\n    .then((res) => {\n      return res.data;\n    })\n    .catch((err) => {\n      log(err);\n    });\n\n  return res;\n}\n","import React from \"react\";\n\nimport { ReactComponent as LoadingIcon } from \"../assets/icons/loader.svg\";\n\ntype LoaderProps = {\n  id?: string;\n};\n\nconst Loader = ({ id }: LoaderProps) => {\n  return (\n    <div id={id} className=\"loader\">\n      <LoadingIcon />\n    </div>\n  );\n};\n\nexport default Loader;\n","import { VariantData } from \"../types\";\n\nexport const parseData = (variantData: VariantData[]) => {\n  const parsedData: VariantData[] = [];\n  const errors: VariantData[] = [];\n\n  variantData.map((data) => {\n    if (data.status === \"ERROR\") {\n      errors.push(data);\n      data.sift = \"\";\n      data.polyphen = \"\";\n    }\n    // To show all the data (irrespective of errorneous variants)\n    parsedData.push(data);\n  });\n\n  return { parsedData, errors };\n};\n","import React from \"react\";\n\nconst CSVInstructions = () => {\n  return (\n    <div className=\"instructions-container instructions-list\">\n      <h3>CSV Format</h3>\n      <p>\n        Try this example with{\" \"}\n        <a\n          href={\n            \"https://www.nextprot.org/entry/NX_P13569/gh/calipho-sib/VEP-community-tool\"\n          }\n          target={\"_blank\"}\n          rel={\"noreferrer\"}\n        >\n          CFTR\n        </a>\n        <br />\n      </p>\n      <p>\n        <strong>nextprotPosition,originalAminoAcid,variantAminoAcid</strong>\n      </p>\n      <br />\n      <p>44,D,G</p>\n      <br />\n      <p>110,D,H</p>\n      <br />\n      <p>170,R,H</p>\n      <br />\n      <br />\n      <p>\n        <b>Note: Maximum number of variants is 200</b>\n      </p>\n    </div>\n  );\n};\n\nexport default CSVInstructions;\n","import {\n  useTable,\n  useSortBy,\n  usePagination,\n  useGlobalFilter,\n  Cell,\n} from \"react-table\";\nimport { useExportData } from \"react-table-plugins\";\nimport React, { useMemo } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport { getExportFileBlob } from \"../utils/helpers/exportFile\";\nimport { VariantData } from \"../utils/types\";\nimport { ERROR, TABLE_PAGE_SIZE } from \"../utils/constants\";\nimport CSVUpload from \"./CSVUpload\";\nimport * as Icon from \"../assets/icons/index\";\nimport { getPredictions } from \"../utils/service\";\nimport Loader from \"./Loader\";\nimport { parseData } from \"../utils/helpers/parseData\";\nimport CSVInstructions from \"./CSVInstructions\";\n\nconst RESULT_COLUMN_DATA = [\n  {\n    Header: \"Position\",\n    accessor: \"nextprotPosition\",\n  },\n  {\n    Header: \"Original\",\n    accessor: \"originalAminoAcid\",\n  },\n  {\n    Header: \"Variant\",\n    accessor: \"variantAminoAcid\",\n  },\n  {\n    Header: \"Sift\",\n    accessor: \"sift\",\n  },\n  {\n    Header: \"Sift Prediction\",\n    accessor: \"siftPrediction\",\n  },\n  {\n    Header: \"Polyphen\",\n    accessor: \"polyphen\",\n  },\n  {\n    Header: \"Polyphen Prediction\",\n    accessor: \"polyphenPrediction\",\n  },\n  {\n    Header: \"Status\",\n    accessor: \"status\",\n  },\n];\n\ntype TableProps = {\n  predictionLoading: boolean;\n  setPredictionLoading: (predictionLoading: boolean) => void;\n  data: VariantData[];\n  setData: (data: VariantData[]) => void;\n  error: string | undefined;\n  setError: (error: string) => void;\n  isoName: string | undefined;\n  fv: any;\n};\n\nconst Table = (props: TableProps) => {\n  const {\n    predictionLoading,\n    setPredictionLoading,\n    data,\n    setData,\n    error,\n    setError,\n    isoName,\n    fv,\n  } = props;\n\n  const MAX_VARIANTS = 200;\n\n  let dataLimitExceeded = false;\n\n  const getTagClassname = (errorRow: boolean, rowHeader: any) => {\n    if (rowHeader === \"Status\") {\n      return errorRow ? \"error-tag tag\" : \"ok-tag tag\";\n    }\n    return \"\";\n  };\n\n  const getBackgroundColor = (\n    index: string,\n    cellId: string,\n    errorRow: boolean,\n    getColumnColor: boolean,\n  ) => {\n    if (errorRow) return \"#fff6e8\";\n\n    if (getColumnColor) {\n      const POLYPHEN_PREDICTION = {\n        BENIGN: \"benign\",\n        POSSIBLY_DAMAGING: \"possibly_damaging\",\n        PROBABLY_DAMAGING: \"probably_damaging\",\n      };\n\n      const SIFT_PREDICTION = {\n        DELETERIOUS: \"deleterious\",\n        TOLERATED: \"tolerated\",\n      };\n\n      const idx = Number(index);\n      const value =\n        cellId === \"polyphenPrediction\"\n          ? data[idx].polyphenPrediction!\n          : data[idx].siftPrediction!;\n\n      if (!value) return \"#ffffff\";\n      if (value === POLYPHEN_PREDICTION.POSSIBLY_DAMAGING) return \"#ffba5f\";\n      else if (\n        value === POLYPHEN_PREDICTION.PROBABLY_DAMAGING ||\n        value === SIFT_PREDICTION.DELETERIOUS\n      )\n        return \"#e56565\";\n      else if (\n        value === POLYPHEN_PREDICTION.BENIGN ||\n        SIFT_PREDICTION.TOLERATED\n      )\n        return \"#85cc64\";\n    }\n\n    return \"#ffffff\";\n  };\n\n  const getCellContent = (cell: Cell<VariantData, any>) => {\n    return cell.render(\"Cell\");\n  };\n\n  const callGetPredictions = async (csvData: VariantData[]) => {\n    const data = {\n      isoform: isoName,\n      variants: csvData,\n    };\n\n    // Check if the limit of 200 variants (maximum supported by VEP API) is exceeded\n    if (csvData.length > MAX_VARIANTS) {\n      data.variants = data.variants.slice(0, 199);\n      dataLimitExceeded = true;\n    }\n\n    setPredictionLoading(true);\n    await getPredictions(data).then((res) => {\n      if (Array.isArray(res) && res.length) {\n        const { parsedData } = parseData(res);\n        if (parsedData.length < data.variants.length) {\n          setError(ERROR.PARTIAL_RESULTS);\n        } else if (dataLimitExceeded) {\n          setError(ERROR.LIMIT_EXCEEDED);\n        } else {\n          setError(\"\");\n        }\n\n        setData(parsedData);\n        setPredictionLoading(false);\n        return;\n      }\n      setError(ERROR.NO_RESULTS);\n      setPredictionLoading(false);\n    });\n  };\n\n  const columns = useMemo(() => RESULT_COLUMN_DATA, []);\n\n  const getExportFileName = () => {\n    return isoName;\n  };\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    page,\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    state: { pageIndex, pageSize },\n    exportData,\n  } = useTable(\n    {\n      //@ts-ignore\n      columns,\n      data,\n      getExportFileBlob,\n      getExportFileName,\n      initialState: { pageIndex: 0, pageSize: TABLE_PAGE_SIZE },\n    },\n    useGlobalFilter,\n    useSortBy,\n    useExportData,\n    usePagination,\n  );\n\n  return (\n    <div className=\"variant-table-container\">\n      {error && (\n        <div className=\"error-message\">\n          <img src={Icon.Error} alt=\"Error\" />\n          <p>{error}</p>\n        </div>\n      )}\n      <div className=\"table-header\">\n        <CSVUpload callGetPredictions={callGetPredictions} />\n        <div style={{ marginLeft: \"auto\" }}>\n          <button\n            className=\"btn get-predictions-btn\"\n            onClick={() => {\n              let data = fv.getPredictions();\n              callGetPredictions(data);\n            }}\n          >\n            Get Predictions\n          </button>\n          <button\n            className=\"btn\"\n            onClick={() => {\n              exportData(\"csv\", true);\n            }}\n          >\n            Export All as CSV\n          </button>\n        </div>\n      </div>\n      <CSVInstructions />\n      <table {...getTableProps()} className=\"variant-data-table\">\n        <thead>\n          {headerGroups.map((headerGroup) => {\n            return (\n              <tr {...headerGroup.getHeaderGroupProps()} key={uuidv4()}>\n                {headerGroup.headers.map((column) => {\n                  return (\n                    <th\n                      {...column.getHeaderProps(column.getSortByToggleProps())}\n                      key={uuidv4()}\n                    >\n                      {column.render(\"Header\")}\n                      <span>\n                        {column.isSorted ? (\n                          column.isSortedDesc ? (\n                            <img\n                              src={Icon.DownArrow}\n                              className=\"icon\"\n                              alt=\"Down arrow icon\"\n                            />\n                          ) : (\n                            <img\n                              src={Icon.UpArrow}\n                              className=\"icon\"\n                              alt=\"Down arrow icon\"\n                            />\n                          )\n                        ) : (\n                          <img\n                            src={Icon.Sort}\n                            className=\"icon\"\n                            alt=\"Down arrow icon\"\n                          />\n                        )}\n                      </span>\n                    </th>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {page.map((row) => {\n            prepareRow(row);\n            const errorRow = row.values.status === \"ERROR\";\n            return (\n              <tr {...row.getRowProps()} key={uuidv4()}>\n                {row.cells.map((cell) => {\n                  const getColumnColor =\n                    cell.column.id === \"polyphenPrediction\" ||\n                    cell.column.id === \"siftPrediction\";\n                  return (\n                    <td\n                      style={{\n                        backgroundColor: getBackgroundColor(\n                          cell.row.id,\n                          cell.column.id,\n                          errorRow,\n                          getColumnColor,\n                        ),\n                      }}\n                      {...cell.getCellProps()}\n                      key={uuidv4()}\n                    >\n                      <p\n                        className={getTagClassname(\n                          errorRow,\n                          cell.column.Header,\n                        )}\n                      >\n                        {getCellContent(cell)}\n                      </p>\n                    </td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n      {predictionLoading && (\n        <>\n          <p className=\"table-text\">\n            <i>Fetching predictions...</i>\n          </p>\n          <Loader />\n        </>\n      )}\n      {data.length === 0 && !predictionLoading ? (\n        <p className=\"table-text\">\n          <i>\n            No records added. Add variants and click on get predictions to get\n            results\n          </i>\n          .\n        </p>\n      ) : (\n        <div className=\"pagination\">\n          <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\n            {\"<<\"}\n          </button>{\" \"}\n          <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n            {\"<\"}\n          </button>{\" \"}\n          <button onClick={() => nextPage()} disabled={!canNextPage}>\n            {\">\"}\n          </button>{\" \"}\n          <button\n            onClick={() => gotoPage(pageCount - 1)}\n            disabled={!canNextPage}\n          >\n            {\">>\"}\n          </button>{\" \"}\n          <span>\n            Page{\" \"}\n            <strong>\n              {pageIndex + 1} of {pageOptions.length}\n            </strong>{\" \"}\n          </span>\n          <span>\n            | Go to page:{\" \"}\n            <input\n              type=\"number\"\n              defaultValue={pageIndex + 1 || 1}\n              onChange={(e) => {\n                const page = e.target.value ? Number(e.target.value) - 1 : 0;\n                gotoPage(page);\n              }}\n            />\n          </span>{\" \"}\n          <select\n            value={pageSize}\n            onChange={(e) => {\n              setPageSize(Number(e.target.value));\n            }}\n          >\n            {[10, 20, 30, 40, 50].map((pageSize) => (\n              <option key={pageSize} value={pageSize}>\n                Show {pageSize}\n              </option>\n            ))}\n          </select>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Table;\n","import React, { useState, useEffect, ReactElement } from \"react\";\nimport Select from \"react-select\";\n\nimport * as Icon from \"../assets/icons/index\";\nimport { IsoformMapping } from \"../utils/types\";\n\ntype IsoformProps = {\n  isoName?: string;\n  isoform: IsoformMapping[];\n  handleIsoformChange: (value: string) => void;\n};\n\ntype Option = {\n  value: string;\n  label: string | ReactElement;\n  disabled: boolean;\n};\n\ntype Label = {\n  offset: number;\n  isoform: string;\n};\n\nconst LabelComponent = (props: Label) => {\n  const { offset, isoform } = props;\n  return (\n    <>\n      {offset < 0 ? (\n        <div className=\"isoform-info\">\n          {isoform}\n          <img\n            title=\"Isoform mapping not available\"\n            src={Icon.Info}\n            className=\"icon\"\n            alt=\"Info Icon\"\n          />\n        </div>\n      ) : (\n        isoform\n      )}\n    </>\n  );\n};\n\nconst Isoform = ({ isoform, handleIsoformChange }: IsoformProps) => {\n  const [options, setOptions] = useState<Option[]>();\n  const [selectedOption, setSelectedOption] = useState<Option>();\n\n  useEffect(() => {\n    let optionMap: Option[] = [];\n    isoform.map((iso: IsoformMapping) => {\n      let option: Option = {\n        value: iso.isoform,\n        label: <LabelComponent isoform={iso.isoform} offset={iso.offset} />,\n        disabled: iso.offset < 0 ? true : false,\n      };\n      optionMap.push(option);\n    });\n    setOptions(optionMap);\n    setSelectedOption(optionMap[0]);\n  }, [isoform]);\n\n  if (!options) {\n    return <></>;\n  }\n\n  return (\n    <div className=\"isoform-select-wrapper\">\n      <p>Change Isoform</p>\n      <Select\n        className=\"isoform-select\"\n        options={options}\n        value={selectedOption}\n        isOptionDisabled={(option: Option) => option.disabled}\n        defaultValue={selectedOption}\n        onChange={(option) => {\n          handleIsoformChange(option!.value);\n          setSelectedOption(option!);\n        }}\n      />\n    </div>\n  );\n};\n\nexport default Isoform;\n","import React, { useEffect, useState } from \"react\";\nimport { Nextprot, createFeature } from \"feature-viewer\";\n\nimport { featureList } from \"../utils/featureList\";\nimport {\n  getFeaturesByView,\n  getFeaturesByIsoform,\n  addFeatures,\n  getMetadataByView,\n} from \"../utils/helpers/getFeatures\";\nimport Table from \"./Table\";\nimport Isoform from \"./Isoform\";\nimport {\n  FeatsForViewer,\n  FeatureData,\n  IsoformMapping,\n  IsoformType,\n  MetaData,\n  VariantData,\n} from \"../utils/types\";\nimport Loader from \"./Loader\";\nimport { ERROR } from \"../utils/constants\";\nimport { getIsoformList, getPredictions } from \"../utils/service\";\nimport log from \"../utils/helpers/logger\";\nimport { parseData } from \"../utils/helpers/parseData\";\n\nconst FeatureViewerComponent = () => {\n  const [data, setData] = useState<VariantData[] | []>([]);\n  const [isoform, setIsoform] = useState<IsoformMapping[]>();\n  const [sequence, setSequence] = useState<IsoformType[]>();\n  const [isoName, setIsoName] = useState<string>();\n  const [features, setFeatures] = useState<FeatsForViewer[]>();\n  const [error, setError] = useState<string | undefined>();\n  const [loading, setLoading] = useState(true);\n  const [predictionLoading, setPredictionLoading] = useState(false);\n  const [fv, setFv] = useState<any>();\n\n  const CONTAINER_ID = \"fv1\";\n  const nx = new Nextprot.Client(\"Calipho Group\", \"VEP community tool\");\n\n  function buildFeatures(\n    fv: any,\n    sequences: IsoformType[],\n    isoName: string,\n    features: FeatureData[],\n  ) {\n    sequences.forEach(function (seq: IsoformType) {\n      if (seq.uniqueName === isoName) {\n        let featureViewer = new createFeature(seq.sequence, \"#fv1\", {\n          showAxis: true,\n          showSequence: true,\n          brushActive: true,\n          toolbar: true,\n          bubbleHelp: false,\n          zoomMax: 10,\n          variant: true,\n        });\n\n        setFv(featureViewer);\n\n        features.map((feat: FeatureData) => {\n          featureViewer.addFeature(feat);\n        });\n\n        featureViewer.onVariantChanged((d: CustomEvent) => {\n          setData([...d.detail]);\n        });\n\n        featureViewer.onGetPredictions((d: CustomEvent) => {\n          setPredictionLoading(true);\n          let data = {\n            isoform: isoName,\n            variants: d.detail,\n          };\n\n          getPredictions(data).then((res) => {\n            if (Array.isArray(res) && res.length) {\n              const { parsedData } = parseData(res);\n              if (parsedData.length < data.variants.length)\n                setError(ERROR.PARTIAL_RESULTS);\n              else setError(\"\");\n\n              setData(parsedData);\n              setPredictionLoading(false);\n              return;\n            }\n            setError(ERROR.NO_RESULTS);\n            setPredictionLoading(false);\n          });\n        });\n      }\n    });\n  }\n\n  function handleIsoformChange(value: string) {\n    setIsoName(value);\n    document.getElementById(CONTAINER_ID)!.innerHTML = \"\";\n    const featureList: FeatureData[] = addFeatures(features!, value);\n    buildFeatures(fv, sequence!, value, featureList);\n  }\n\n  useEffect(() => {\n    const params = new URLSearchParams(window.location.search);\n    const paramEntry: string | null = params.get(\"nxentry\");\n\n    getIsoformList(paramEntry!).then((res) => {\n      setIsoform(res);\n    });\n\n    let sequences: IsoformType[];\n    let features: FeatureData[];\n\n    Promise.all(getFeaturesByView(featureList, nx, paramEntry!))\n      .then((rawData) => {\n        if (rawData) {\n          sequences = rawData[0];\n          const metadata: MetaData[] = getMetadataByView();\n          const featsForViewer: FeatsForViewer[] = getFeaturesByIsoform(\n            rawData,\n            metadata,\n          );\n          features = addFeatures(featsForViewer, sequences[0].isoformAccession);\n          buildFeatures(fv, sequences, sequences[0].isoformAccession, features);\n\n          setSequence(sequences);\n          setFeatures(featsForViewer);\n          setIsoName(sequences[0].isoformAccession);\n          setLoading(false);\n        } else {\n          setError(ERROR.NOT_FOUND);\n        }\n      })\n      .catch((err) => {\n        log(err);\n      });\n  }, []);\n\n  return (\n    <>\n      {loading && <Loader id=\"feature-loader\" />}\n      <div className=\"viewer-container\">\n        {isoform && !error && (\n          <Isoform\n            isoName={isoName}\n            isoform={isoform}\n            handleIsoformChange={handleIsoformChange}\n          />\n        )}\n        <div id=\"fv1\" />\n        <Table\n          predictionLoading={predictionLoading}\n          setPredictionLoading={setPredictionLoading}\n          data={data}\n          setData={setData}\n          error={error}\n          setError={setError}\n          isoName={isoName}\n          fv={fv}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default FeatureViewerComponent;\n","import React from \"react\";\nimport { INSTRUCTIONS } from \"../utils/constants\";\n\nconst Instructions = () => {\n  return (\n    <div className=\"instructions-container\">\n      <h3>instructions</h3>\n      {Object.entries(INSTRUCTIONS).map(([key, value]) => {\n        return (\n          <div className=\"instructions-list\" key={value}>\n            <h5>{key}</h5>\n            <p>{value}</p>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Instructions;\n","import React from \"react\";\n\nconst Header = () => {\n  return (\n    <div className=\"header\">\n      <h1>\n        The Variant Effect Predictor (VEP) helps scientists determine the\n        potential impact of\n        <strong> non-synonymous single amino acid variants (SAAVs) </strong>\n        by returning the SIFT and Polyphen-2 scores.\n      </h1>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nimport * as Icon from \"../assets/icons\";\n\nconst Footer = () => {\n  return (\n    <div className=\"footer\">\n      The VEP Community Tool is being developed as open source. All the software\n      packages are being actively maintained on{\" \"}\n      <a\n        href=\"https://github.com/calipho-sib/VEP-community-tool\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        GitHub\n      </a>{\" \"}\n      and we encourage organizations and individuals to contribute requirements,\n      documentation, issues, new templates, and code.\n      <img\n        className=\"github-corner\"\n        src={Icon.GithubCorner}\n        alt=\"GitHub Icon\"\n      />\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport FeatureViewerComponent from \"./components/FeatureViewer\";\nimport \"./App.css\";\nimport Instructions from \"./components/Instructions\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Instructions />\n      <FeatureViewerComponent />\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(`web-vitals`).then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}